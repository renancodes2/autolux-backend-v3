name: CI - AutoLux Backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-ci:
    name: Build, Test & Dockerize
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER_TEST }} 
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD_TEST }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB_TEST }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: ‚¨áÔ∏è Checkout do reposit√≥rio
        uses: actions/checkout@v4

      - name: ‚öôÔ∏è Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: üì¶ Instalar depend√™ncias
        run: npm install

      - name: ‚öôÔ∏è Gerar Prisma Client
        run: npx prisma generate

      - name: üß™ Rodar testes
        run: npm run test
        env:
          DATABASE_URL: postgresql://${{ secrets.POSTGRES_USER_TEST }}:${{ secrets.POSTGRES_PASSWORD_TEST }}@postgres:5432/${{ secrets.POSTGRES_DB_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          CLOUDINARY_NAME: ${{ secrets.CLOUDINARY_NAME }}
          CLOUDINARY_API_KEY: ${{ secrets.CLOUDINARY_API_KEY }}
          CLOUDINARY_API_SECRET: ${{ secrets.CLOUDINARY_API_SECRET }}
          
      - name: üê≥ Build da imagem Docker
        run: docker build -t autolux-backend .